module.exports = {
  root: true,
  env: {
    "react-native/react-native": true,
    es2021: true,
    node: true,
  },
  extends: [
    `universe/native`,
    `eslint:recommended`,
    `plugin:react/recommended`,
    `plugin:react-hooks/recommended`,
    `prettier`,
  ],
  globals: {
    Atomics: `readonly`,
    SharedArrayBuffer: `readonly`,
  },
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 2018,
    sourceType: `module`,
  },
  settings: {
    "import/resolver": {
      node: {
        extensions: [`.js`, `.jsx`, `.ts`, `.tsx`],
      },
    },
  },
  plugins: [`react`, `react-native`, `prettier`, `import`],
  rules: {
    "prettier/prettier": [
      `error`,
      {
        printWidth: 100,
        trailingComma: `es5`,
        singleQuote: false,
      },
    ],
    camelcase: `off`,
    quotes: [1, `backtick`, { avoidEscape: true }],
    "array-callback-return": `error`,
    "block-scoped-var": `error`,
    complexity: [`warn`, 18],
    "import/extensions": [
      `error`,
      `ignorePackages`,
      {
        js: `never`,
        jsx: `never`,
        ts: `never`,
        tsx: `never`,
      },
    ],
    eqeqeq: `error`,
    indent: [`error`, 2, { SwitchCase: 1, ignoreComments: true }],
    "func-name-matching": `error`,
    "global-require": `off`,
    "import/no-default-export": `off`,
    "import/prefer-default-export": `off`,
    "max-classes-per-file": `off`,
    "max-depth": [`warn`, 5],
    "no-console": `off`,
    "no-constructor-return": `error`,
    "no-return-assign": [`error`, `except-parens`],
    "no-shadow": `off`,
    "no-template-curly-in-string": `error`,
    "no-underscore-dangle": `off`,
    "no-unused-vars": [`error`, { argsIgnorePattern: `^_`, varsIgnorePattern: `^_` }],
    "no-use-before-define": `off`,
    "react-perf/jsx-no-new-function-as-prop": `off`,
    "no-useless-backreference": `error`,
    "require-atomic-updates": `error`,
    "require-await": `error`,
    "prefer-promise-reject-errors": `error`,
    "spaced-comment": [0, `never`],
    "react/boolean-prop-naming": `off`,
    "react/forbid-prop-types": `off`,
    "react/jsx-props-no-spreading": `off`,
    "react/no-unescaped-entities": `off`,
    "react/no-unused-state": `error`,
    "react/static-property-placement": `off`,
    "react-native/no-unused-styles": `warn`,
    "react-native/split-platform-components": [`warn`],
    "react-native/no-inline-styles": `off`,
    "react-native/no-color-literals": `error`,
    "react-native/no-raw-text": `off`,
    "react-native/no-single-element-style-arrays": `error`,
    "no-restricted-syntax": [
      `error`,
      `WithStatement`,
      `BinaryExpression[operator='in']`,
      `MetaProperty`,
      `SequenceExpression`,
    ],
    "react-hooks/rules-of-hooks": `error`,
    "react/jsx-boolean-value": `off`,
    "no-unsafe-optional-chaining": `off`,
    "react/jsx-no-constructed-context-values": `off`,
    "react/function-component-definition": `off`,
    "react/no-arrow-function-lifecycle": `off`,
    "react/react-in-jsx-scope": `off`,
    "react/no-unstable-nested-components": [`error`, { allowAsProps: true }],
  },
  overrides: [
    {
      files: [`*.ts`, `*.tsx`],
      parser: `@typescript-eslint/parser`,
      parserOptions: {
        project: `./tsconfig.json`,
      },
      plugins: [`@typescript-eslint`],
      rules: {
        // '@typescript-eslint/no-unused-vars': [0, { extensions: [`.ts`, `.tsx`] }],
        "@typescript-eslint/no-unused-vars": [
          `error`,
          { argsIgnorePattern: `^_`, varsIgnorePattern: `^_` },
        ],
        "react/jsx-filename-extension": [1, { extensions: [`.ts`, `.tsx`] }],
        "react/require-default-props": [0],
        "react/prop-types": `off`,
      },
    },
  ],
};
